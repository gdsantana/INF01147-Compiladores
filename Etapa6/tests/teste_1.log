gdsantana@DESKTOP-IF73HRM:/mnt/e/Area de Trabalho/INF01147-Compiladores/Etapa6$ make clean && make && ./etapa6 tests/teste_1.txt output.txt && gcc tests/teste_1.s && ./a.out
rm lex.yy.c y.tab.c y.tab.h *.o etapa6
gcc -c -g main.c
yacc -d parser.y
parser.y: warning: 1 shift/reduce conflict [-Wconflicts-sr]
parser.y: warning: 2 reduce/reduce conflict [-Wconflicts-rr]
lex scanner.l
gcc -c -g  lex.yy.c
gcc -c -g  y.tab.c
gcc -c -g  hash.c
gcc -c -g  ast.c
gcc -c -g  semantic.c
gcc -c -g tacs.c
gcc -c -g  asm.c
gcc -c -g commons.c
gcc main.o lex.yy.o y.tab.o hash.o ast.o semantic.o tacs.o asm.o commons.o -g -o etapa6


Semantics start

 Undeclared semantic errors: 0

AST_PROGRAM
  AST_LIST
    AST_ELEMENT
      AST_GLOBAL_VAR
        AST_KW_INT
        AST_SYMBOL
    AST_LIST
      AST_ELEMENT
        AST_GLOBAL_VAR
          AST_KW_INT
          AST_SYMBOL
      AST_LIST
        AST_ELEMENT
          AST_GLOBAL_VAR
            AST_KW_INT
            AST_SYMBOL
        AST_LIST
          AST_ELEMENT
            AST_FUNC
              AST_HEADER
                AST_KW_INT
              AST_BLOCK
                AST_COMMAND_LIST
                  AST_OUTPUT
                    AST_SYMBOL
                  AST_COMMAND_LIST
                    AST_OUTPUT
                      AST_SYMBOL
                    AST_COMMAND_LIST
                      AST_OUTPUT
                        AST_LIST_ELEMENTS
                          AST_SYMBOL
                          AST_SYMBOL
                      AST_COMMAND_LIST
                        AST_ATTR_INPUT
                          AST_INPUT
                            AST_KW_INT
                        AST_COMMAND_LIST
                          AST_OUTPUT
                            AST_SYMBOL
                          AST_COMMAND_LIST
                            AST_ATTR_INPUT
                              AST_INPUT
                                AST_KW_INT
                            AST_COMMAND_LIST
                              AST_OUTPUT
                                AST_LIST_ELEMENTS
                                  AST_SYMBOL
                                  AST_LIST_ELEMENTS
                                    AST_SYMBOL
                                    AST_ADD
                                      AST_SYMBOL
                                      AST_SYMBOL
                              AST_COMMAND_LIST
                                AST_OUTPUT
                                  AST_LIST_ELEMENTS
                                    AST_SYMBOL
                                    AST_LIST_ELEMENTS
                                      AST_SYMBOL
                                      AST_SUB
                                        AST_SYMBOL
                                        AST_SYMBOL
                                AST_COMMAND_LIST
                                  AST_OUTPUT
                                    AST_LIST_ELEMENTS
                                      AST_SYMBOL
                                      AST_LIST_ELEMENTS
                                        AST_SYMBOL
                                        AST_MULT
                                          AST_SYMBOL
                                          AST_SYMBOL
                                  AST_OUTPUT
                                    AST_LIST_ELEMENTS
                                      AST_SYMBOL
                                      AST_LIST_ELEMENTS
                                        AST_SYMBOL
                                        AST_LIST_ELEMENTS
                                          AST_DIV
                                            AST_SYMBOL
                                            AST_SYMBOL
                                          AST_SYMBOL

hash after tacGenerateCode

Table[0]         has input1 * input2 =           type 264        dataType 5      dataValue 0     dataString (null)
Table[23]        has main        type 259        dataType 1      dataValue 0     dataString (null)
Table[24]        has _TMP_VAR_11         type 1607       dataType 5      dataValue 0     dataString input1 __dash__ input2 =
Table[36]        has _TMP_VAR_4          type 1607       dataType 0      dataValue 0     dataString (null)
Table[37]        has Enter the first value:              type 264        dataType 5      dataValue 0     dataString (null)
Table[42]        has *           type 271        dataType 0      dataValue 0     dataString (null)
Table[43]        has +           type 269        dataType 0      dataValue 0     dataString (null)
Table[47]        has /           type 272        dataType 0      dataValue 0     dataString (null)
Table[48]        has 0           type 262        dataType 1      dataValue 0     dataString (null)
Table[75]        has Teste 1:            type 264        dataType 5      dataValue 0     dataString (null)
Table[87]        has _TMP_VAR_15         type 1607       dataType 5      dataValue 0     dataString \n
Table[112]       has _TMP_VAR_3          type 1607       dataType 5      dataValue 0     dataString \n
Table[150]       has _TMP_VAR_19         type 1607       dataType 5      dataValue 0     dataString \n
Table[154]       has input__dash__one            type 258        dataType 1      dataValue 0     dataString (null)
Table[188]       has _TMP_VAR_2          type 1607       dataType 5      dataValue 0     dataString Enter the first value:
Table[208]       has input1 / input2 =           type 264        dataType 5      dataValue 0     dataString (null)
Table[241]       has input1 + input2 =           type 264        dataType 5      dataValue 0     dataString (null)
Table[260]       has \n          type 264        dataType 5      dataValue 0     dataString (null)
Table[264]       has _TMP_VAR_1          type 1607       dataType 5      dataValue 0     dataString Atribuições e operações aritmeticas com impressão:  [read, +, __dash__, *, /] \n
Table[289]       has _TMP_VAR_12         type 1607       dataType 5      dataValue 0     dataString \n
Table[340]       has _TMP_VAR_0          type 1607       dataType 5      dataValue 0     dataString Teste 1:
Table[352]       has _TMP_VAR_16         type 1607       dataType 0      dataValue 0     dataString (null)
Table[554]       has _TMP_VAR_13         type 1607       dataType 0      dataValue 0     dataString (null)
Table[617]       has _TMP_VAR_17         type 1607       dataType 5      dataValue 0     dataString \n
Table[653]       has _TMP_VAR_9          type 1607       dataType 5      dataValue 0     dataString \n
Table[686]       has input__dash__two            type 258        dataType 1      dataValue 0     dataString (null)
Table[717]       has Enter the second value:             type 264        dataType 5      dataValue 0     dataString (null)
Table[729]       has _TMP_VAR_8          type 1607       dataType 5      dataValue 0     dataString input1 + input2 =
Table[748]       has result      type 258        dataType 1      dataValue 0     dataString (null)
Table[756]       has _TMP_VAR_10         type 1607       dataType 0      dataValue 0     dataString (null)
Table[805]       has _TMP_VAR_7          type 1607       dataType 0      dataValue 0     dataString (null)
Table[814]       has __dash__            type 270        dataType 0      dataValue 0     dataString (null)
Table[819]       has _TMP_VAR_14         type 1607       dataType 5      dataValue 0     dataString input1 * input2 =
Table[876]       has input1 __dash__ input2 =            type 264        dataType 5      dataValue 0     dataString (null)
Table[881]       has _TMP_VAR_6          type 1607       dataType 0      dataValue 0     dataString (null)
Table[882]       has _TMP_VAR_18         type 1607       dataType 5      dataValue 0     dataString input1 / input2 =
Table[943]       has Atribuições e operações aritmeticas com impressão:  [read, +, __dash__, *, /] \n            type 264        dataType 5      dataValue 0     dataString (null)
Table[957]       has _TMP_VAR_5          type 1607       dataType 5      dataValue 0     dataString Enter the second value:


TAC(TAC_GLOBAL_VAR_INT, input__dash__one, 0, 0);
TAC(TAC_GLOBAL_VAR_INT, input__dash__two, 0, 0);
TAC(TAC_GLOBAL_VAR_INT, result, 0, 0);
TAC(TAC_BEGINFUN, main, _TMP_VAR_17, 0);
TAC(TAC_OUTPUT_STRING, _TMP_VAR_0, 0, 0);
TAC(TAC_OUTPUT, _TMP_VAR_0, 0, 0);
TAC(TAC_OUTPUT_STRING, _TMP_VAR_1, 0, 0);
TAC(TAC_OUTPUT, _TMP_VAR_1, 0, 0);
TAC(TAC_OUTPUT_STRING, _TMP_VAR_3, 0, 0);
TAC(TAC_OUTPUT_STRING, _TMP_VAR_2, 0, 0);
TAC(TAC_OUTPUT, _TMP_VAR_2, 0, 0);
TAC(TAC_INPUT, _TMP_VAR_4, 0, 0);
TAC(TAC_MOVE, input__dash__one, _TMP_VAR_4, 0);
TAC(TAC_OUTPUT_STRING, _TMP_VAR_5, 0, 0);
TAC(TAC_OUTPUT, _TMP_VAR_5, 0, 0);
TAC(TAC_INPUT, _TMP_VAR_6, 0, 0);
TAC(TAC_MOVE, input__dash__two, _TMP_VAR_6, 0);
TAC(TAC_OUTPUT_STRING, _TMP_VAR_9, 0, 0);
TAC(TAC_OUTPUT_STRING, _TMP_VAR_8, 0, 0);
TAC(TAC_ADD, _TMP_VAR_7, input__dash__one, input__dash__two);
TAC(TAC_OUTPUT_INT, _TMP_VAR_7, 0, 0);
TAC(TAC_OUTPUT, _TMP_VAR_7, 0, 0);
TAC(TAC_OUTPUT_STRING, _TMP_VAR_12, 0, 0);
TAC(TAC_OUTPUT_STRING, _TMP_VAR_11, 0, 0);
TAC(TAC_SUB, _TMP_VAR_10, input__dash__one, input__dash__two);
TAC(TAC_OUTPUT_INT, _TMP_VAR_10, 0, 0);
TAC(TAC_OUTPUT, _TMP_VAR_10, 0, 0);
TAC(TAC_OUTPUT_STRING, _TMP_VAR_15, 0, 0);
TAC(TAC_OUTPUT_STRING, _TMP_VAR_14, 0, 0);
TAC(TAC_MULT, _TMP_VAR_13, input__dash__one, input__dash__two);
TAC(TAC_OUTPUT_INT, _TMP_VAR_13, 0, 0);
TAC(TAC_OUTPUT, _TMP_VAR_13, 0, 0);
TAC(TAC_OUTPUT_STRING, _TMP_VAR_19, 0, 0);
TAC(TAC_OUTPUT_STRING, _TMP_VAR_18, 0, 0);
TAC(TAC_DIV, _TMP_VAR_16, input__dash__one, input__dash__two);
TAC(TAC_OUTPUT_INT, _TMP_VAR_16, 0, 0);
TAC(TAC_OUTPUT_STRING, _TMP_VAR_17, 0, 0);
TAC(TAC_OUTPUT, _TMP_VAR_17, 0, 0);
TAC(TAC_ENDFUN, main, 0, 0);
Numero de linhas: 19.
Compilation Success.

Teste 1:Atribuições e operações aritmeticas com impressão:  [read, +, -, *, /]

Enter the first value: 36
Enter the second value: 4

input1 + input2 = 40
input1 - input2 = 32
input1 * input2 = 144
input1 / input2 = 9
